%%% -*- mode: erlang -*-

%% Require OTP version R13B04 or R14
{require_otp_vsn, "R13B04|R14"}.

{lib_dirs, ["deps"]}.

%% Depends
{deps, [%  {meck, ".*", {git, "git://github.com/norton/meck.git", "meck"}}
        %, {edown, ".*", {git, "git://github.com/norton/edown.git", "edown"}}
        %, {asciiedoc, ".*", {git, "git://github.com/norton/asciiedoc.git", "asciidoc"}}
        %, {qc, ".*", {git, "git://github.com/norton/qc.git", "qc"}}
        %, {sext, ".*", {git, "git://github.com/norton/sext.git", "sext"}}
       ]}.

%% Erlang compiler options
{erl_opts, [debug_info, warnings_as_errors
           ]}.
%% Erlang edoc options for asciiedown_doclet
{edoc_opts, [{doclet, asciiedown_doclet}
             , {app_default, "http://www.erlang.org/doc/man"}
             , {new, true}
             , {packages, false}
             , {stylesheet, ""}   % don't copy stylesheet.css
             , {image, ""}        % don't copy erlang.png
             , {top_level_readme, {"./README.md", "https://github.com/norton/lets"}}
            ]}.

%% Erlang edoc options for asciiedoc_doclet
%% {edoc_opts, [{doclet, asciiedoc_doclet}
%%              , {app_default, "http://www.erlang.org/doc/man"}
%%              , {new, true}
%%              , {packages, false}
%%             ]}.

%% Eunit compiler options
{eunit_compile_opts, [
                      %% {d, 'QC', true}
                      %% For Proper, comment QC_EQC, uncomment
                      %% QC_PROPER, and re-compile
                      %% , {d, 'QC_PROPER', true}
                      %% For QuickCheck, comment QC_PROPER, uncomment
                      %% QC_EQC, and re-compile
                      %% , {d, 'QC_EQC', true}
                     ]}.

%% EUnit options
{eunit_opts, [verbose]}.

%% Port compilation environment variables.
{port_envs, [
             %% DRV_CFLAGS
             {"DRV_CFLAGS", "$DRV_CFLAGS -fPIC -g -Werror"},
             {"DRV_CFLAGS", "$DRV_CFLAGS -I c_src/leveldb/include"},
             %% DRV_LDFLAGS
             {"DRV_LDFLAGS", "$DRV_LDFLAGS c_src/leveldb/lib/libleveldb.a c_src/snappy/lib/libsnappy.a -lstdc++"}
            ]}.

%% Pre command hooks
{pre_hooks, [{clean, "c_src/build_deps.sh clean"},
             {compile, "c_src/build_deps.sh c_src/leveldb/lib/libleveldb.a"}]}.

%% port_sources
{port_sources, [  "c_src/lets_drv_lib.cc"
                , "c_src/lets_drv.cc"
                , "c_src/lets_nif_lib.cc"
                , "c_src/lets_nif.cc"
               ]}.

%% so_specs
{so_specs, [  {"priv/lib/lets_drv.so", ["c_src/lets_drv_lib.o", "c_src/lets_drv.o"]}
            , {"priv/lib/lets_nif.so", ["c_src/lets_nif_lib.o", "c_src/lets_nif.o"]}
           ]}.
